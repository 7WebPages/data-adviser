---

- hosts: localhost
  vars_files:
    - env_vars/digitalocean.yml
    - env_vars/private.yml

  tasks:
    - name: Check ssh key
      ignore_errors: yes
      digital_ocean: >
        state=present
        command=ssh
        name="{{ do_ssh_name }}"
        ssh_pub_key="{{ do_ssh_pub_key }}"
        api_token="{{ digitalocean_api_key }}"

    - name: Create droplets
      digital_ocean: >
        state=present
        command=droplet
        name={{ item.value.name }}
        private_networking=yes
        ssh_pub_key="{{ do_ssh_pub_key }}"
        size_id={{ item.value.size }}
        region_id={{ do_region }}
        unique_name=yes
        image_id={{ do_image }}
        api_token="{{ digitalocean_api_key }}"
        wait_timeout={{ do_timeout }}
      with_dict: "{{ do_droplets }}"
      register: registered_droplets

    - name: Create DNS records
      uri:
        status_code: 201
        url: https://api.digitalocean.com/v2/domains
        method: POST
        HEADER_Authorization: "Bearer {{ digitalocean_api_key }}"
        body_format: json
        body: "{\"name\": \"{{ item.item.value.name }}\", \"ip_address\": \"{{ item.droplet.ip_address }}\"}"
      with_items: "{{ registered_droplets.results }}"

    - debug: msg="ID is {{ item.droplet.id }}, IP is {{ item.droplet.ip_address }}"
      with_items: "{{ registered_droplets.results }}"

    - local_action: template src=templates/hosts_template.j2 dest="{{ inventory_dir }}/production_hosts.yml"
    # - local_action: template src=templates/inventory_template.j2 dest="{{ inventory_dir }}/production"
